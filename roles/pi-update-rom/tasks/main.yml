- name: Waiting for server to come back
  local_action: wait_for host={{ ansible_host }} port=22 delay=2 connect_timeout=200
  become: false
  delegate_to: localhost
  delegate_facts: true

- name: Setup rapsberry hosts
  setup:
    gather_timeout: 3
  ignore_errors: true
  ignore_unreachable: true
  register: setup
  when: ansible_hostname is not defined

- set_fact: ansible_hostname = setup.ansible_facts['ansible_hostname']
  when: ansible_hostname is not defined
    
- debug:
    var: ansible_hostname

- name: Include ssh
  include_role:
    name: ssh
  vars:
    ssh_timeout: 30
    ssh_user: pi
    ansible_user: pi
    ssh_pass: "{{pi_password}}" 
    ansible_password: "{{pi_password}}"
  when: setup.unreachable is defined and setup.unreachable and ansible_hostname is not defined

- name: Setup rapsberry hosts
  setup:
    gather_timeout: 3
  ignore_errors: true
  ignore_unreachable: true
  register: setup
  when: ansible_hostname is not defined

- set_fact: ansible_hostname = setup.ansible_facts['ansible_hostname']
  when: ansible_hostname is not defined


- name: Fix slow apt update
  become: yes
  sysctl:
    name: "{{item}}"
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  with_items:
    - net.ipv6.conf.all.disable_ipv6
    - net.ipv6.conf.default.disable_ipv6
    - net.ipv6.conf.lo.disable_ipv6
  register: ip6

- name: Restart service networking
  become: yes
  service:
    name: networking
    state: restarted
  when: ip6.changed

- name: Verify update required
  become: yes
  shell: if rpi-eeprom-update | grep -q 'update required'; then echo 'true'; else echo 'false'; fi
  register: update
- set_fact: update_required={{ update.stdout }}

- name: 'Update and upgrade apt packages'
  become: yes
  apt:
    upgrade: 'yes'
    update_cache: yes
    cache_valid_time: 86400
  register: apt_update
  when: update_required or force_update

- name: Verify update available
  become: yes
  shell: if rpi-eeprom-update | grep -q 'update available'; then echo 'true'; else echo 'false'; fi
  register: update
  
- set_fact: update_required={{ update.stdout }}

- name: Setup rpi-eeprom-update branch
  become: yes
  lineinfile:
    path: /etc/default/rpi-eeprom-update
    line: 'FIRMWARE_RELEASE_STATUS="stable"'
    regex: "FIRMWARE_RELEASE_STATUS="
    state: present


- name: Check if ROM exists
  stat: path=/lib/firmware/raspberrypi/bootloader/stable/{{pi_eeprom_version}}.bin
  register: rom
  when: update_required or force_update

- name: Extract bootconf
  shell: rpi-eeprom-config /lib/firmware/raspberrypi/bootloader/stable/{{pi_eeprom_version}}.bin > ./bootconf.txt
  when: update_required or force_update

- name: Setup boot configuration
  lineinfile:
    path: "./bootconf.txt"
    line: "{{item}}"
    regex: "{{item}}"
    state: present
  register: bootconf
  with_items:
   - "BOOT_ORDER=0xf421"
   - "MAX_RESTARTS=1"
   - "SD_BOOT_MAX_RETRIES=1"
   - "NET_BOOT_MAX_RETRIES=1"
  when: update_required or force_update

- name: Update ROM
  become: yes
  shell: "{{item}}"
  with_items:
   - "rpi-eeprom-config --out ./{{pi_eeprom_version}}-netboot.bin --config ./bootconf.txt /lib/firmware/raspberrypi/bootloader/stable/{{pi_eeprom_version}}.bin"
   - "rpi-eeprom-update -d -f ./{{pi_eeprom_version}}-netboot.bin"
  when: update_required or force_update

- name: Include task list in play
  include: reboot-task.yml
  when: update_required or force_update
