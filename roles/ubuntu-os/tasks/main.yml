- name: Check if pxe is disabled
  delegate_to: localhost
  stat: path={{boot_path}}-disable
  register: bootpath

- name: Enable pxe boot
  delegate_to: localhost
  shell: mv "{{boot_path}}-disable" "{{boot_path}}"
  when: bootpath.stat.exists == true

- name: Restart services
  become: yes
  delegate_to: localhost
  systemd:
    name: "{{item}}"
    state: restarted
  with_items:
    - nfs-server
    - tftpd-hpa
  when: bootpath.stat.exists == true
  
- name: Reload systemd
  become: yes
  delegate_to: localhost
  command: systemctl daemon-reload

- name: Waiting for server to come back
  local_action: wait_for host={{ ansible_host }} port=22 delay=2 connect_timeout=200
  become: false
  delegate_to: localhost
  delegate_facts: true

- name: Check if archive img exists
  stat: path=./ubuntu-20.10-preinstalled-server-arm64+raspi.img.xz
  register: img

- name: Download ubuntu image
  get_url:
    url: https://cdimage.ubuntu.com/releases/20.10/release/ubuntu-20.10-preinstalled-server-arm64+raspi.img.xz
    dest: ./
  when: img.stat.exists == false

- name: Format disk
  become: yes
  shell: "dd if=/dev/zero of={{os_disk}} bs=1M count=2"

- name: Extract and write to disk
  become: yes
  shell: xzcat ./ubuntu-20.10-preinstalled-server-arm64+raspi.img.xz | dd bs=4M of={{os_disk}} conv=fsync status=progress

- name: Mount up root
  become: yes
  mount:
    src: "{{os_disk}}2"
    path: "./rootmnt"
    state: mounted
    fstype: ext4

- name: Configure Cloud Init
  become: yes
  template:
    src: "etc/cloud/cloud.yml.j2"
    dest: "./rootmnt/etc/cloud/cloud.cfg"

- name: Mount up boot
  become: yes
  mount:
    src: "{{os_disk}}1"
    path: "./bootmnt"
    state: mounted
    fstype: vfat

- name: Expire user password
  become: yes
  lineinfile:
    path: ./bootmnt/user-data
    line: "  expire: false"
    regex: "  expire: true"
    state: present

- name: Disable Bluetooth and WiFi
  become: yes
  lineinfile:
    path: "./bootmnt/config.txt"
    line: "{{item}}"
    regex: "{{item}}"
    state: present
  register: _config
  with_items:
  - dtoverlay=disable-wifi
  - dtoverlay=disable-bt

- name: Restart server
  become: yes
  shell: sleep 2 && /sbin/shutdown -r now "Ansible system"
  async: 1
  poll: 0
  
- name: Wait
  pause:
    seconds: 10

- name: Check if TFTP boot path exists
  delegate_to: localhost
  stat: path={{boot_path}}
  register: bootpath

- name: Move/Disable TFTP boot path
  delegate_to: localhost
  become: yes
  shell: mv "{{boot_path}}" "{{boot_path}}-disable"
  when: bootpath.stat.exists

- name: Disable NFS and TFTP exports
  become: yes
  delegate_to: localhost
  lineinfile:
    path: "/etc/exports"
    line: "{{item}}"
    state: absent
  register: _exports
  with_items:
    - "{{boot_path}} *(rw,sync,no_subtree_check,no_root_squash)"
    - "{{root_path}} *(rw,sync,no_subtree_check,no_root_squash)"

- name: Restart services
  delegate_to: localhost
  become: yes
  systemd:
    name: "{{item}}"
    state: "restarted"
  with_items:
    - nfs-server
    - tftpd-hpa
  when: _exports.changed