
- name: Waiting for server to come back
  local_action: wait_for host={{ ansible_host }} port=22 delay=2 connect_timeout=200
  become: false
  delegate_to: localhost
  delegate_facts: true

- name: Check if archive img exists
  stat: path=./ubuntu-20.10-preinstalled-server-arm64+raspi.img.xz
  register: img

- name: Download ubuntu image
  get_url:
    url: https://cdimage.ubuntu.com/releases/20.10/release/ubuntu-20.10-preinstalled-server-arm64+raspi.img.xz
    dest: ./
  when: img.stat.exists == false

- name: Format disk
  become: yes
  shell: "dd if=/dev/zero of={{os_disk}} bs=1M count=2"

- name: Extract and write to disk
  become: yes
  shell: xzcat ./ubuntu-20.10-preinstalled-server-arm64+raspi.img.xz | dd bs=4M of={{os_disk}} conv=fsync status=progress

- name: Mount up root
  become: yes
  mount:
    src: "{{os_disk}}2"
    path: "./rootmnt"
    state: mounted
    fstype: ext4

- name: Mount up boot
  become: yes
  mount:
    src: "{{os_disk}}1"
    path: "./bootmnt"
    state: mounted
    fstype: vfat

- name: Expire user password
  become: yes
  lineinfile:
    path: ./bootmnt/user-data
    line: "  expire: false"
    regex: "  expire: true"
    state: present

- name: Disable Bluetooth and WiFi
  become: yes
  lineinfile:
    path: "./bootmnt/config.txt"
    line: "{{item}}"
    regex: "{{item}}"
    state: present
  register: _config
  with_items:
  - dtoverlay=disable-wifi
  - dtoverlay=disable-bt

- name: UMount up root
  become: yes
  mount:
    src: "{{os_disk}}2"
    path: "./rootmnt"
    state: absent
    fstype: ext4

- name: UMount up boot
  become: yes
  mount:
    src: "{{os_disk}}1"
    path: "./bootmnt"
    state: absent
    fstype: vfat

- name: Restart server
  ignore_errors: true
  ignore_unreachable: true
  connection: ssh 
  shell: sleep 0 && /sbin/shutdown -r now "Ansible system"
  async: 1
  poll: 0
  become: yes
  vars:
    ansible_user: pi
    ansible_password: "{{pi_password}}"
  register: restart
  
- name: Check if pxe is enabled
  delegate_to: localhost
  connection: local
  become: yes
  stat: path={{boot_path}}/start4.elf
  register: bootpath
  when: restart.unreachable is not defined

- name: Disable pxe boot
  delegate_to: localhost
  connection: local
  become: yes
  shell: mv "{{boot_path}}/start4.elf" "{{boot_path}}/start4.elf.disable"
  when: restart.unreachable is not defined and bootpath.stat.exists  

- name: Wait
  pause:
    seconds: 30

- name: Waiting for ssh
  local_action: wait_for host={{ ansible_host }} port=22 delay=1 connect_timeout=5 state=present timeout=300
  become: false
  delegate_to: localhost
  delegate_facts: true
  register: ssh_con

- name: Include ssh
  include_role:
    name: ssh
  vars:
    ssh_user: ubuntu
    ansible_user: ubuntu
    ssh_pass: "{{ubuntu_password}}" 
    ansible_password: "{{ubuntu_password}}"