- name: Ensure openshift Python library is installed.
  pip:
    name: openshift
    state: present
  become: true

- name: Check if kube confing exists for {{remote_user}}
  stat: path=/home/{{remote_user}}/.kube
  register: kube

- name: Initialize the Kubernetes cluster using kubeadm
  run_once: 'yes'
  command: "kubeadm init --apiserver-advertise-address='{{ ansible_host }}' --apiserver-cert-extra-sans='{{ ansible_host }}' --node-name {{ inventory_hostname }} --pod-network-cidr=192.168.0.0/16"
  when: not kube.stat.exists

- name: Create directory kubeconfig for {{remote_user}}
  command: "{{ item }}"
  become: false
  with_items:
    - mkdir -p /home/{{remote_user}}/.kube
  when: not kube.stat.exists

- name: Setup kubeconfig for {{remote_user}}
  command: "{{ item }}"
  become: yes
  with_items:
    - cp -i /etc/kubernetes/admin.conf /home/{{remote_user}}/.kube/config
    - chown {{remote_user}}:{{remote_user}} /home/{{remote_user}}/.kube/config
  when: not kube.stat.exists

- name: Restart kubelet
  command: /bin/true
  notify: restart kubelet

- name: Wait for k8s to be ready
  wait_for:
    host: localhost
    port: 6443
    state: started
    timeout: 60


- name: Install pod network
  become: false
  command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  when: not kube.stat.exists


- name: Get dns service address
  become: false
  command: kubectl get services --all-namespaces -ojsonpath='{.items[?(@.metadata.name=="kube-dns")].spec.clusterIP}'
  register: kubednsaddress

- name: Wait for dns to be ready
  wait_for: host={{ kubednsaddress.stdout }} port=53 state=started timeout=1800
 
- name: Create metal lb namespace.
  become: false
  k8s:
    name: metallb-system
    api_version: v1
    kind: Namespace
    state: present

- name: Create metal lb secret
  become: false
  command: kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
  when: not kube.stat.exists

- name: Install metal lb
  become: false
  command: "{{ item }}"
  with_items:
    - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml
    - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml
  when: not kube.stat.exists

- name: Kubectl bash completion
  become: yes
  become_user: root
  shell: kubectl completion bash > /etc/bash_completion.d/kubectl
  when: not kube.stat.exists

- name: Kubectl alias complete
  become: false
  lineinfile:
      path: ~/.bashrc
      line: "{{item}}"
      regex: "{{item}}"
      state: present
  with_items:
  - alias k=kubectl
  - complete -F __start_kubectl k
  when: not kube.stat.exists