---
- name: 'Update and upgrade apt packages'
  become: yes
  apt:
    upgrade: 'yes'
    update_cache: yes
    cache_valid_time: 86400

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: 'Install packages'
  become: yes
  apt:
    pkg:
      - python3-pip
      - python2
      - aptitude
      - git
      - bash-completion

- name: "Searching for a cgroup_enable_cpuset"
  lineinfile:
    path: /boot/firmware/cmdline.txt
    line: "cgroup_enable=cpuset"
    regex: "cgroup_enable=cpuset"
    state: present
  check_mode: yes
  register: cgroup_enable_cpuset

- name: 'Enable cgroup_enable=cpuset'
  command: sed -i '1s/$/ cgroup_enable=cpuset/' /boot/firmware/cmdline.txt
  when: cgroup_enable_cpuset.msg == "line added"
  register: _boot_config

- name: "Searching for a cgroup_enable_memory"
  lineinfile:
    path: /boot/firmware/cmdline.txt
    line: "cgroup_enable=memory"
    regex: "cgroup_enable=memory"
    state: present
  check_mode: yes
  register: cgroup_enable_memory

- name: 'Enable cgroup_enable=memory'
  command: sed -i '1s/$/ cgroup_enable=memory/' /boot/firmware/cmdline.txt
  when: cgroup_enable_memory.msg == "line added"
  register: _boot_config


- name: "Searching for a cgroup_memory"
  lineinfile:
    path: /boot/firmware/cmdline.txt
    line: "cgroup_memory=1"
    regex: "cgroup_memory=1"
    state: present
  check_mode: yes
  register: cgroup_memory

- name: 'Enable cgroup_memory=1'
  command: sed -i '1s/$/ cgroup_memory=1/' /boot/firmware/cmdline.txt
  when: cgroup_memory.msg == "line added"
  register: _boot_config


- name: "Searching for a swapaccount=1"
  lineinfile:
    path: /boot/firmware/cmdline.txt
    line: "swapaccount=1"
    regex: "swapaccount=1"
    state: present
  check_mode: yes
  register: swapaccount


- name: 'Enable swapaccount=1'
  command: sed -i '1s/$/ swapaccount=1/' /boot/firmware/cmdline.txt
  when: swapaccount.msg == "line added"
  register: _boot_config


- name: Disable Bluetooth and WiFi
  become: yes
  lineinfile:
      path: /boot/firmware/usercfg.txt
      line: "{{item}}"
      regex: "{{item}}"
      state: present
  register: _user_config
  with_items:
  - dtoverlay=disable-wifi
  - dtoverlay=disable-bt

- name: "restart machine"  # noqa 503
  reboot:
    msg: "Reboot by Ansible, because config changed."
    reboot_timeout: 300   # (= 5 minutes)
  when: _boot_config.changed or _user_config.changed
